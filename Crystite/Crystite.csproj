<Project Sdk="Remora.Sdk">
    <Sdk Name="Remora.Resonite.Sdk" />
    <Sdk Name="Microsoft.NET.Sdk.Web" />

    <PropertyGroup>
        <ResoniteProjectType>standalone</ResoniteProjectType>
        <ResoniteTarget>headless</ResoniteTarget>
    </PropertyGroup>

    <PropertyGroup>
        <OutputType>Exe</OutputType>
        <AssemblyName>crystite</AssemblyName>
        <TargetFramework />
        <ExecutableFrameworks>net8.0</ExecutableFrameworks>
        <ImplicitUsings>enable</ImplicitUsings>
    </PropertyGroup>

    <PropertyGroup>
        <LegalLicense>AGPL-3.0-or-later</LegalLicense>
        <LegalAuthor>Jarl Gullberg</LegalAuthor>
        <LegalEmail>jarl.gullberg@gmail.com</LegalEmail>
        <UseSPDXFileHeaders>true</UseSPDXFileHeaders>
    </PropertyGroup>

    <PropertyGroup>
        <VersionPrefix>1.0.0</VersionPrefix>
        <Description>Open-source headless client wrapper for Resonite</Description>
    </PropertyGroup>

    <PropertyGroup>
        <IsPackable>false</IsPackable>
    </PropertyGroup>

    <ItemGroup>
        <ResoniteReference Include="FrooxEngine" Private="false" />
        <ResoniteReference Include="FrooxEngine.Store" Private="false" />
        <ResoniteReference Include="Elements.Core" Private="false" />
        <ResoniteReference Include="Elements.Assets" Private="false" />
        <ResoniteReference Include="SkyFrost.Base" Private="false" />
        <ResoniteReference Include="SkyFrost.Base.Models" Private="false" />
        <ResoniteReference Include="FrooxEngine.Weaver" Private="false" />
    </ItemGroup>

    <ItemGroup>
      <PackageReference Include="CommandLiners.Posix" />
      <PackageReference Include="CSGL.MSDFGen" ExcludeAssets="build" >
          <NoWarn>NU1701</NoWarn>
      </PackageReference>
      <PackageReference Include="CSharpGameLibrary" ExcludeAssets="build" GeneratePathProperty="true" />
      <PackageReference Include="Hardware.Info" />
      <PackageReference Include="Humanizer.Core" />
      <PackageReference Include="Lib.Harmony.Thin" />
      <PackageReference Include="LiteDB" />
      <PackageReference Include="LiteDB.Async" />
      <PackageReference Include="Microsoft.AspNetCore.Http.Connections.Client" />
      <PackageReference Include="Microsoft.AspNetCore.SignalR.Client.Core" />
      <PackageReference Include="Microsoft.Extensions.DependencyInjection" />
      <PackageReference Include="Microsoft.Extensions.Hosting" />
      <PackageReference Include="Microsoft.Extensions.Hosting.Systemd" />
      <PackageReference Include="Remora.Extensions.Options.Immutable" />
      <PackageReference Include="Remora.Rest" />
      <PackageReference Include="Remora.Results" />
      <PackageReference Include="Serilog.AspNetCore" />
      <PackageReference Include="SteamKit2" />
      <PackageReference Include="TwitchLib.Client" />
    </ItemGroup>

    <ItemGroup>
        <!-- bring in Newtonsoft.Json as a ship-only dependency to ensure we always have a strongly-named copy -->
        <PackageReference Include="Newtonsoft.Json" IncludeAssets="runtime" />

        <!-- bring in some extra packages to ensure we use the same version as Resonite -->
        <PackageReference Include="Mono.Cecil" />
        <PackageReference Include="System.Threading.Tasks.Dataflow" />
    </ItemGroup>

    <ItemGroup>
        <!-- something is wrong with this package, so we need to explicitly tell MSBuild where the assembly is -->
        <Reference Include="CSharpGameLibrary, Version=1.0.0.0, Culture=neutral">
            <HintPath>$(PkgCSharpGameLibrary)\lib\net452\CSharpGameLibrary.dll</HintPath>
        </Reference>
    </ItemGroup>

    <ItemGroup>
        <Content Include="steam_appid.txt">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
    </ItemGroup>

    <ItemGroup>
      <ProjectReference Include="..\Crystite.API\Crystite.API.csproj" />
    </ItemGroup>

    <ItemGroup>
      <Compile Update="ResoniteDependentHostConfiguration.cs">
        <DependentUpon>Program.cs</DependentUpon>
      </Compile>
      <Compile Update="Configuration\AssetCleanupLocation.cs">
        <DependentUpon>HeadlessApplicationConfiguration.cs</DependentUpon>
      </Compile>
      <Compile Update="Configuration\AssetCleanupType.cs">
        <DependentUpon>HeadlessApplicationConfiguration.cs</DependentUpon>
      </Compile>
      <Compile Update="Configuration\WorldStartupParameters.cs">
        <DependentUpon>ResoniteHeadlessConfig.cs</DependentUpon>
      </Compile>
    </ItemGroup>
</Project>
